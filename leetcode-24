/*
 * @lc app=leetcode.cn id=24 lang=java
 *
 * [24] 两两交换链表中的节点
 */

// @lc code=start
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        ListNode preListNode = new ListNode(-1);
        preListNode.next = head;
        ListNode pre = preListNode;
        while(head!=null && head.next!=null){
            ListNode l1 = head;
            ListNode l2 = head.next;
            pre.next=l2;
            l1.next = l2.next;
            l2.next = l1;
            pre = l1;
            head = l1.next;
        }
        return preListNode.next;
    }
}
// @lc code=end

pre永远指向交换完的下一个 head指向pre的后一个，相当于是三个指针在操作
