/*
 * @lc app=leetcode.cn id=41 lang=java
 *
 * [41] 缺失的第一个正数
 */

// @lc code=start
class Solution {
    public int firstMissingPositive(int[] nums) {
        if(nums.length<=0){
            return 1;
        }
        if(nums.length==1 && nums[0]!=1){
            return 1;
        }
        if(nums.length==1 && nums[0]==1){
            return 2;
        }
        if(nums.length==2 && nums[0]<=0 &&nums[1]>1){
            return 1;
        }
        Arrays.sort(nums);
        if(nums[0]>1){
            return 1;
        }
        for(int i = 1;i<nums.length;i++){
            if(nums[i]>nums[i-1]+1 && nums[i-1]>=-1){
                if(nums[i-1]+1==0 && nums[i]==1){
                    continue;
                }
                return nums[i-1]+1<=0?1:nums[i-1]+1;
            }else if(nums[i]>1 && nums[i-1]<-1){
                return 1;
            }
        }
        return nums[nums.length-1]+1>0?nums[nums.length-1]+1:1;
    }
}
// @lc code=end

