/*
 * @lc app=leetcode.cn id=42 lang=java
 *
 * [42] 接雨水
 */

// @lc code=start
class Solution {
    public int trap(int[] height) {
        int left = 0;
        int right = height.length-1;
        int left_max = 0;
        int right_max = 0;
        int result = 0;
        while(left<right){
            if(height[left]<height[right]){
                if(height[left]>=left_max){
                    left_max=height[left];
                }else{

                    result += (left_max-height[left]);
                }
                left++;
            }else{
                if(height[right]>=right_max){
                    right_max=height[right];
                }else{

                    result += (right_max-height[right]);
                }
                right--;
            }
        }
        return result;
    }
}
// @lc code=end

思路：双指针 夹逼原理，记录当前最大的如果后面的比他小 就加两个值的差值
